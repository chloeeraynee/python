# -*- coding: utf-8 -*-
"""proj3_desc-stats.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZIHObY8Ax3AGlQujKOVyQ96ifq8L2N4_
"""

import pandas as pd

# load in csv
movie = pd.read_csv("/content/drive/MyDrive/Colab Notebooks/data/movie_profit.csv")
movie.head(5)

# use describe to find descriptive statistics
movie.describe()

# count: 966. no missing values in relation to each other
# note: excluding the unnamed column because it is the IDs for the entities and doesn't hold relevent information
# mean:
#   rating (6.8) - movies are usually recepted as better than average (where 5 is considered 'on par')
#   duration (117.5) - movies usually run for 117.5 minutes long
#   us_gross_million (156.2) - movies usually earn 156.2 million in the us
#   worldwide_gross_million (410.1) - movies usually earn 410.1 million worldwide
# std:
#   rating (0.89) - movie ratings do not vary much from the mean
#   duration (21.6) - movie runtimes vary less than 30 minutes form the mean
#   us_gross_million (110.6) - variance on us earnings is huge at 110.6 million
#   worldwide_gross_million (294.8) - variance on worldwide earnings isn't as variance as the us
# min:
#   rating (3.3) - lowest rating is 3.3, no movie receieved the lowest possible rating of 0
#   duration (69.0) - the shortest movie was 1 hour and 9 minutes
#   us_gross_million (0.01) - the lowest earnings in the us was 10k
#   worldwide_gross_million (176.6) - the lowest earnings worldwide was 176.6 million
# max:
#   rating (9.2) - highest rating is 9.2, no movie receieved the highest possible rating of 10
#   duration (238.0) - the longest movie was 3 hours and 58 minutes
#   us_gross_million (936.7) - the highest earnings inthe us was 936.7 million
#   worldwide_gross_million (2847.4) - the highest earnings worldwide was 2847.4 million (over 2 billion)

# using binomial distribution from scipy.stats
from scipy.stats import binom

# define parameters x, n, and p:
x = 18 # number of successes
n = 20 # number of trials
p = 0.92 # probability of success

# use binom.pmf() to calculating binomial prob
binom.pmf(x, n, p)

# the probability that 18 successes occur during 20 trials is 0.271 or 27.1%

# using normal distribution from scipy.stats
from scipy.stats import norm

# define parameters x, n, and p:
x = 68000 # measurement of interest
m = 60000 # mean
s = 7500 # standard deviation

# use norm.cdf() to find area to the left
# use 1 - norm.cdf() to find area to the right
1 - norm.cdf(x, m, s)

# the proportion of values to the right of 68000 in the normal distribution is 0.143 or 14.3%